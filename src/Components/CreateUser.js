import React, {Component} from 'react';

class CreateUser extends Component {
  constructor(props) {
    super(props);
    this.state = {
      submitted: false,
      startPage: this.props.startPage,
      password1: '',
      password2: ''
    }
  }

  typePassword = (event, password) => {
    let password1 = document.querySelectorAll('input[type="password"]')[0].value;
    let password2 = document.querySelectorAll('input[type="password"]')[1].value;
    if (password1 !== password2 || password1.length < 6) {
      document.querySelectorAll('label[for="psw"]').forEach(password => {
        password.style.color = 'red';
      });
      document.querySelectorAll('label[type="password"]').forEach(password => {
        password.style.border = '1px solid red';
      });
    } else {
      document.querySelectorAll('label[for="psw"]').forEach(password => {
        password.style.color = 'black';
      });
      document.querySelectorAll('input[type="password"]').forEach(password => {
        password.style.border = '1px solid #ccc';
      });
    }

    this.setState({
      [password]: event.target.value
    })
  };

  createUser = event => {
    event.preventDefault();
    let email = event.target.email.value;
    let password = event.target.password1.value;
    let firstName = event.target.firstName.value;
    let lastName = event.target.lastName.value;
    if (email && password && firstName && lastName) {
      let json = {
        email, firstName, lastName, password
      };

      this.setState({
        submitted: true
      });

      event.target.reset();
      
      this.props.post('/createUser', json)
          .then((result) => {
            console.log(result);
            if (result.result) {
              let uid = result.result.id;
              localStorage.setItem('uid', uid);
              window.location.href = this.state.startPage;
            } else {
              window.alert('You need a stronger password!');
              this.setState({
                submitted: false
              })
            }

          })
          .catch(err => {
            console.log(err);
          })
    }
  };

  render() {
    let inputStyle = {
      width: '100%',
      padding: '12px 20px',
      margin: '8px 0',
      display: 'inline-block',
      border: '1px solid #ccc',
      boxSizing: 'border-box',
    };

    let loginButton = {
      backgroundColor: '#4CAF50',
      color: 'white',
      margin: '8px 0',
      padding: '15px',
      border: 'none',
      cursor: 'pointer',
      width: '100%',
    };

    let formStyle = {
      width: '50%',
      margin: 'auto',
    };

    let cancelButton = {
      width: 'auto',
      padding: '10px 18px',
      backgroundColor: '#f44336',
    };

    return (
      !this.state.submitted ?
        <form onSubmit={this.createUser} style={formStyle}>
          <h2>Create a User</h2>
          <div className="container">
            <label htmlFor="uname"><b>Email</b></label>
            <input type="email" style={inputStyle} placeholder="Enter Email" name="email" required/>

            <label htmlFor="firstName"><b>First Name</b></label>
            <input type="text" style={inputStyle} placeholder="Enter First Name" name="firstName" required/>

            <label htmlFor="lastName"><b>Last Name</b></label>
            <input type="text" style={inputStyle} placeholder="Enter Last Name" name="lastName" required/>

            <label htmlFor="psw"><b>Password</b></label>
            <input type="password" style={inputStyle} onChange={event => this.typePassword(event, "password1")} placeholder="Enter Password of at least 6 characters" name="password1" required/>

            <label htmlFor="pasw"><b>Re-Enter Password</b></label>
            <input type="password" style={inputStyle} onChange={event => this.typePassword(event, "password2")} placeholder="Enter Password Again" name="password2" required/>

            <button className="login-button" style={loginButton} type="submit">Create User</button>
          </div>
        </form>
        :
        <div>Loading</div>
    )
  }
}

export default CreateUser;
