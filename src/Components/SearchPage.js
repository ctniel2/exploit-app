import React, {Component} from 'react';
import Menu from './Menu';
import TextField from '@material-ui/core/TextField';
import InputAdornment from '@material-ui/core/InputAdornment';
import Search from '@material-ui/icons/Search';
import Typography from '@material-ui/core/Typography';
import Button from '@material-ui/core/Button';
import FormControl from '@material-ui/core/FormControl';
import Select from '@material-ui/core/Select';
import MenuItem from '@material-ui/core/MenuItem';
import Input from '@material-ui/core/Input';
import InputLabel from '@material-ui/core/InputLabel';
import {Paper} from '@material-ui/core';
import MaterialTable, {MTableToolbar} from 'material-table';

class SearchPage extends Component {
  constructor(props) {
    super(props);
    this.state = {
      searchTerm: '',
      filterSelected: '',
      frequentTerms: [
        'Webcam',
        'Router',
        'Server',
        'FTP',
        'HTTP'
      ],
      exploitFilterOptions: [
        {name: 'Description', value: 'description'},
        {name: 'Date', value: '_date'},
        {name: 'Author', value: 'author'},
        {name: 'Platform', value: 'platform'},
        {name: 'Type', value: 'type'},
        {name: 'Port', value: 'port'}
      ],
      shodanFilterOptions: [
        {name: 'IP', value: 'ip'},
        {name: 'Port', value: 'port'},
        {name: 'City', value: 'city'},
        {name: 'Country', value: 'country'},
        {name: 'OS', value: 'os'},
        {name: 'Org', value: 'org'}
      ],
      searchDone: false,
      columns: [
        {
          title: 'Exploit',
          field: 'description'
        },
        {
          title: 'Author',
          field: 'author'
        },
        {
          title: 'Platform',
          field: 'platform'
        },
        {
          title: 'Type',
          field: 'type'
        },
        {
          title: 'Port',
          field: 'port'
        },
        {
          title: 'Date',
          field: '_date'
        },
        {
          title: 'File',
          field: 'file'
        }
      ],
      data: []
    }
  }

  componentDidMount() {
    
  }

  updateSearchTerm = (event) => {
    this.setState({
      searchTerm: event.target.value
    })
  };

  keyPress = (event) => {
    if (event.keyCode === 13) {
      this.search();
    }
  };

  updateFilter = (event) => {
    this.setState({
      filterSelected: event.target.value
    })
  };

  searchPopular = (event, item, key) => {
    console.log(item);
    this.props.get('/search', [{name: 'term', value: item}, {name: 'filter', value: 'description'}])
        .then(result => {
          this.setState({
            data: result.result,
            searchDone: true
          })
        });
  };

  search = async () => {
    this.props.get('/search', [{name: 'term', value: this.state.searchTerm},{name: 'filter', value: this.state.filterSelected}])
        .then(result => {
          this.setState({
            data: result.result,
            searchDone: true
          })
        });
  };

  render() {
    return (
      <div style={{width: '100%', textAlign: 'center'}}>
        <Menu/>
        <FormControl style={{marginTop: '150px', marginRight: '15px', width: '10%'}}>
          <InputLabel id="filter-label">Search By</InputLabel>
          <Select
            labelId="filter-label"
            id="filter-select"
            value={this.state.filterSelected}
            onChange={this.updateFilter}
            input={<Input />}
          >
            {this.state.exploitFilterOptions.map(option => (
              <MenuItem key={option.value} value={option.value}>
                {option.name}
              </MenuItem>
            ))}
          </Select>
        </FormControl>
        <FormControl style={{width: '50%', margin: 'auto', marginTop: '150px'}}>
          <TextField id="search-bar" 
                     label="Search for an Exploit" 
                     variant="outlined"
                     style={{width: '100%'}} 
                     onChange={this.updateSearchTerm}
                     onKeyDown={this.keyPress}
                     InputProps={{
                       endAdornment: (
                         <InputAdornment position="end" style={{cursor: 'pointer'}} onClick={this.search}>
                           <Search />
                         </InputAdornment>
                       ),
                     }}
          />
        </FormControl>
        <h2 style={{marginTop: '50px'}}>
          Popular Searches
        </h2>
        {
          this.state.frequentTerms.map((item, key) => (
            <Button variant={'contained'}
                    key={key}
                    onClick={event => this.searchPopular(event, item, key)}
                    style={{margin: '15px'}}>
              {item}
            </Button>
          ))
        }
        {
          this.state.searchDone &&
          <Paper>
            <MaterialTable
              title='Search Results'
              columns={this.state.columns}
              data={this.state.data}
              options={{
                search: false,
                sorting: false,
                pageSize: 10,
                pageSizeOptions: [10, 20, 50],
              }}
            />
          </Paper>
        }
      </div>
    )
  }
}

export default SearchPage;
